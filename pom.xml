<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.jjoules</groupId>
  <artifactId>jjoules-maven-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Maven Mojo Archetype</name>
  <url>http://maven.apache.org</url>
  
  <properties>
		<junit-jupiter-version>5.6.2</junit-jupiter-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
	</properties>
  
  
  <dependencies>
    
    <!-- this is all you need to write tests with JUnit Jupiter -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit-jupiter-version}</version>
			<!-- for writing tests "test" scope would suffice,
				but extensions are defined in the project's "main" folder, so we need "compile" -->
			<scope>compile</scope>
		</dependency>
		<!-- this dependency is needed to create parameterized tests -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit-jupiter-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- contains the engine that actually runs the Jupiter-tests -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit-jupiter-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- to demonstrate side-by-side with JUnit 4,
				let's use it as well-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-migrationsupport</artifactId>
			<version>${junit-jupiter-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit-jupiter-version}</version>
		</dependency>

		<!-- other test libraries work out of the box. e.g. ... -->
		<dependency>
			<!-- ... AssertJ ... -->
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.10.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- ... or Mockito ... -->
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.19.1</version>
			<scope>test</scope>
		</dependency>
		<!-- still, some benefit from additional support-->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>2.19.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit-pioneer</groupId>
			<artifactId>junit-pioneer</artifactId>
			<version>0.1.2</version>
			<scope>test</scope>
		</dependency>
		
		<!-- dependencies to annotations -->
        <dependency>
            <groupId>org.apache.maven.plugin-tools</groupId>
            <artifactId>maven-plugin-annotations</artifactId>
            <version>3.5.2</version>
            <optional>true</optional>
        </dependency>
        
        <dependency>
		    <groupId>org.apache.maven</groupId>
		    <artifactId>maven-plugin-api</artifactId>
		    <version>3.3.9</version>
		    <scope>provided</scope>
		</dependency>
        
        <dependency>
		    <groupId>org.apache.maven</groupId>
		    <artifactId>maven-core</artifactId>
		    <version>3.3.9</version>
		</dependency>
    
    
  </dependencies>
  
  <build>
	<plugins>
		<plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.1</version>
            <configuration>
                <source>1.8</source>
                <target>1.8</target>
                <compilerArgument>-proc:none</compilerArgument>
            </configuration>
        </plugin>
        <plugin> 
          <groupId>com.jjoules</groupId>
		  <artifactId>jjoules-maven-plugin</artifactId>
		  <version>1.0-SNAPSHOT</version>
          <!-- <configuration> 
          <mymavenparameter>valeur</mymavenparameter> 
        </configuration>  -->
      </plugin> 
      
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>3.5.2</version>
      </plugin>
      
      <plugin>
		  <groupId>org.apache.maven.plugins</groupId>
	          <artifactId>maven-jar-plugin</artifactId>
	          <version>3.0.2</version>
		  <configuration>
		     <archive>
			<manifest>
				<mainClass>com.jjoules.Main</mainClass>
			</manifest>
		     </archive>
		  </configuration>
       </plugin>
       
       <!--  Using this plugin in an other project -->
       <!-- <plugin>
				<groupId>com.jjoules</groupId>
			  <artifactId>jjoules-plugin</artifactId>
			  <version>1.0-SNAPSHOT</version>
				<executions>
					<execution>						
						<phase>test</phase>
						<configuration>
							<outputDirectory>${basedir}/target/energy/</outputDirectory>
						</configuration>
						<goals>
							<goal>runtest</goal>
						</goals>
					</execution>
				</executions>
			</plugin>-->
	</plugins> 
 </build>
  
  
  
  
</project>
